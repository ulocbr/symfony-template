security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        Uloc\ApiBundle\Entity\User\User: bcrypt
    providers:
        #in_memory: { memory: ~ }
        database_users:
            entity: { class: Uloc\ApiBundle\Entity\User\User }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api/
            anonymous: true
            stateless: true
            guard:
                authenticators:
                    - uloc_api.jwt_token_authenticator
        main:
            pattern: ^/
            anonymous: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/auth, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # allow anonymous API - if auth is needed, it's handled in the controller
        - { path: ^/api/auth, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/public, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: ROLE_USER }
